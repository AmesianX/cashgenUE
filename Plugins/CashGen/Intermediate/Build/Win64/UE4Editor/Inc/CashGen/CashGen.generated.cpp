// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/CashGen.h"
#include "CashGen.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1CashGen() {}
static class UEnum* ECellularReturnType_StaticEnum()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UEnum* Z_Construct_UEnum_CashGen_ECellularReturnType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_CashGen_ECellularReturnType, Z_Construct_UPackage__Script_CashGen(), TEXT("ECellularReturnType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECellularReturnType(ECellularReturnType_StaticEnum, TEXT("/Script/CashGen"), TEXT("ECellularReturnType"), false, nullptr, nullptr);
static class UEnum* ECellularDistanceFunction_StaticEnum()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UEnum* Z_Construct_UEnum_CashGen_ECellularDistanceFunction();
		Singleton = GetStaticEnum(Z_Construct_UEnum_CashGen_ECellularDistanceFunction, Z_Construct_UPackage__Script_CashGen(), TEXT("ECellularDistanceFunction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECellularDistanceFunction(ECellularDistanceFunction_StaticEnum, TEXT("/Script/CashGen"), TEXT("ECellularDistanceFunction"), false, nullptr, nullptr);
static class UEnum* EFractalType_StaticEnum()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UEnum* Z_Construct_UEnum_CashGen_EFractalType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_CashGen_EFractalType, Z_Construct_UPackage__Script_CashGen(), TEXT("EFractalType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFractalType(EFractalType_StaticEnum, TEXT("/Script/CashGen"), TEXT("EFractalType"), false, nullptr, nullptr);
static class UEnum* EInterp_StaticEnum()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UEnum* Z_Construct_UEnum_CashGen_EInterp();
		Singleton = GetStaticEnum(Z_Construct_UEnum_CashGen_EInterp, Z_Construct_UPackage__Script_CashGen(), TEXT("EInterp"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EInterp(EInterp_StaticEnum, TEXT("/Script/CashGen"), TEXT("EInterp"), false, nullptr, nullptr);
static class UEnum* ENoiseType_StaticEnum()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UEnum* Z_Construct_UEnum_CashGen_ENoiseType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_CashGen_ENoiseType, Z_Construct_UPackage__Script_CashGen(), TEXT("ENoiseType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENoiseType(ENoiseType_StaticEnum, TEXT("/Script/CashGen"), TEXT("ENoiseType"), false, nullptr, nullptr);
	void UFastNoise::StaticRegisterNativesUFastNoise()
	{
	}
	IMPLEMENT_CLASS(UFastNoise, 1794611346);
class UScriptStruct* FMeshData::StaticStruct()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshData();
		extern CASHGEN_API uint32 Get_Z_Construct_UScriptStruct_FMeshData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMeshData, Z_Construct_UPackage__Script_CashGen(), TEXT("MeshData"), sizeof(FMeshData), Get_Z_Construct_UScriptStruct_FMeshData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMeshData(FMeshData::StaticStruct, TEXT("/Script/CashGen"), TEXT("MeshData"), false, nullptr, nullptr);
static struct FScriptStruct_CashGen_StaticRegisterNativesFMeshData
{
	FScriptStruct_CashGen_StaticRegisterNativesFMeshData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MeshData")),new UScriptStruct::TCppStructOps<FMeshData>);
	}
} ScriptStruct_CashGen_StaticRegisterNativesFMeshData;
class UScriptStruct* FMeshConfig::StaticStruct()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshConfig();
		extern CASHGEN_API uint32 Get_Z_Construct_UScriptStruct_FMeshConfig_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMeshConfig, Z_Construct_UPackage__Script_CashGen(), TEXT("MeshConfig"), sizeof(FMeshConfig), Get_Z_Construct_UScriptStruct_FMeshConfig_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMeshConfig(FMeshConfig::StaticStruct, TEXT("/Script/CashGen"), TEXT("MeshConfig"), false, nullptr, nullptr);
static struct FScriptStruct_CashGen_StaticRegisterNativesFMeshConfig
{
	FScriptStruct_CashGen_StaticRegisterNativesFMeshConfig()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MeshConfig")),new UScriptStruct::TCppStructOps<FMeshConfig>);
	}
} ScriptStruct_CashGen_StaticRegisterNativesFMeshConfig;
class UScriptStruct* FBiomeConfig::StaticStruct()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FBiomeConfig();
		extern CASHGEN_API uint32 Get_Z_Construct_UScriptStruct_FBiomeConfig_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBiomeConfig, Z_Construct_UPackage__Script_CashGen(), TEXT("BiomeConfig"), sizeof(FBiomeConfig), Get_Z_Construct_UScriptStruct_FBiomeConfig_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBiomeConfig(FBiomeConfig::StaticStruct, TEXT("/Script/CashGen"), TEXT("BiomeConfig"), false, nullptr, nullptr);
static struct FScriptStruct_CashGen_StaticRegisterNativesFBiomeConfig
{
	FScriptStruct_CashGen_StaticRegisterNativesFBiomeConfig()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BiomeConfig")),new UScriptStruct::TCppStructOps<FBiomeConfig>);
	}
} ScriptStruct_CashGen_StaticRegisterNativesFBiomeConfig;
class UScriptStruct* FNoiseConfig::StaticStruct()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FNoiseConfig();
		extern CASHGEN_API uint32 Get_Z_Construct_UScriptStruct_FNoiseConfig_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNoiseConfig, Z_Construct_UPackage__Script_CashGen(), TEXT("NoiseConfig"), sizeof(FNoiseConfig), Get_Z_Construct_UScriptStruct_FNoiseConfig_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNoiseConfig(FNoiseConfig::StaticStruct, TEXT("/Script/CashGen"), TEXT("NoiseConfig"), false, nullptr, nullptr);
static struct FScriptStruct_CashGen_StaticRegisterNativesFNoiseConfig
{
	FScriptStruct_CashGen_StaticRegisterNativesFNoiseConfig()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NoiseConfig")),new UScriptStruct::TCppStructOps<FNoiseConfig>);
	}
} ScriptStruct_CashGen_StaticRegisterNativesFNoiseConfig;
class UScriptStruct* FZoneConfig::StaticStruct()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FZoneConfig();
		extern CASHGEN_API uint32 Get_Z_Construct_UScriptStruct_FZoneConfig_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FZoneConfig, Z_Construct_UPackage__Script_CashGen(), TEXT("ZoneConfig"), sizeof(FZoneConfig), Get_Z_Construct_UScriptStruct_FZoneConfig_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FZoneConfig(FZoneConfig::StaticStruct, TEXT("/Script/CashGen"), TEXT("ZoneConfig"), false, nullptr, nullptr);
static struct FScriptStruct_CashGen_StaticRegisterNativesFZoneConfig
{
	FScriptStruct_CashGen_StaticRegisterNativesFZoneConfig()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ZoneConfig")),new UScriptStruct::TCppStructOps<FZoneConfig>);
	}
} ScriptStruct_CashGen_StaticRegisterNativesFZoneConfig;
	void AZoneManager::StaticRegisterNativesAZoneManager()
	{
	}
	IMPLEMENT_CLASS(AZoneManager, 123863722);
class UScriptStruct* FZoneJob::StaticStruct()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FZoneJob();
		extern CASHGEN_API uint32 Get_Z_Construct_UScriptStruct_FZoneJob_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FZoneJob, Z_Construct_UPackage__Script_CashGen(), TEXT("ZoneJob"), sizeof(FZoneJob), Get_Z_Construct_UScriptStruct_FZoneJob_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FZoneJob(FZoneJob::StaticStruct, TEXT("/Script/CashGen"), TEXT("ZoneJob"), false, nullptr, nullptr);
static struct FScriptStruct_CashGen_StaticRegisterNativesFZoneJob
{
	FScriptStruct_CashGen_StaticRegisterNativesFZoneJob()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ZoneJob")),new UScriptStruct::TCppStructOps<FZoneJob>);
	}
} ScriptStruct_CashGen_StaticRegisterNativesFZoneJob;
	void AWorldManager::StaticRegisterNativesAWorldManager()
	{
		FNativeFunctionRegistrar::RegisterFunction(AWorldManager::StaticClass(), "SpawnZones",(Native)&AWorldManager::execSpawnZones);
	}
	IMPLEMENT_CLASS(AWorldManager, 2933266001);
class UScriptStruct* FFoliageConfig::StaticStruct()
{
	extern CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FFoliageConfig();
		extern CASHGEN_API uint32 Get_Z_Construct_UScriptStruct_FFoliageConfig_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFoliageConfig, Z_Construct_UPackage__Script_CashGen(), TEXT("FoliageConfig"), sizeof(FFoliageConfig), Get_Z_Construct_UScriptStruct_FFoliageConfig_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFoliageConfig(FFoliageConfig::StaticStruct, TEXT("/Script/CashGen"), TEXT("FoliageConfig"), false, nullptr, nullptr);
static struct FScriptStruct_CashGen_StaticRegisterNativesFFoliageConfig
{
	FScriptStruct_CashGen_StaticRegisterNativesFFoliageConfig()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FoliageConfig")),new UScriptStruct::TCppStructOps<FFoliageConfig>);
	}
} ScriptStruct_CashGen_StaticRegisterNativesFFoliageConfig;
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	RUNTIMEMESHCOMPONENT_API class UScriptStruct* Z_Construct_UScriptStruct_FRuntimeMeshTangent();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FColor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionResponse();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMesh_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterial_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();

	CASHGEN_API class UEnum* Z_Construct_UEnum_CashGen_ECellularReturnType();
	CASHGEN_API class UEnum* Z_Construct_UEnum_CashGen_ECellularDistanceFunction();
	CASHGEN_API class UEnum* Z_Construct_UEnum_CashGen_EFractalType();
	CASHGEN_API class UEnum* Z_Construct_UEnum_CashGen_EInterp();
	CASHGEN_API class UEnum* Z_Construct_UEnum_CashGen_ENoiseType();
	CASHGEN_API class UClass* Z_Construct_UClass_UFastNoise_NoRegister();
	CASHGEN_API class UClass* Z_Construct_UClass_UFastNoise();
	CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshData();
	CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshConfig();
	CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FBiomeConfig();
	CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FNoiseConfig();
	CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FZoneConfig();
	CASHGEN_API class UClass* Z_Construct_UClass_AZoneManager_NoRegister();
	CASHGEN_API class UClass* Z_Construct_UClass_AZoneManager();
	CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FZoneJob();
	CASHGEN_API class UFunction* Z_Construct_UFunction_AWorldManager_SpawnZones();
	CASHGEN_API class UClass* Z_Construct_UClass_AWorldManager_NoRegister();
	CASHGEN_API class UClass* Z_Construct_UClass_AWorldManager();
	CASHGEN_API class UScriptStruct* Z_Construct_UScriptStruct_FFoliageConfig();
	CASHGEN_API class UPackage* Z_Construct_UPackage__Script_CashGen();
	UEnum* Z_Construct_UEnum_CashGen_ECellularReturnType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UEnum_CashGen_ECellularReturnType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECellularReturnType"), 0, Get_Z_Construct_UEnum_CashGen_ECellularReturnType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECellularReturnType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("CellValue")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("NoiseLookup")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2Center")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2CenterXValue")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2CenterSq")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2CenterSqXValue")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2Edge")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2EdgeXValue")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2EdgeSq")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2EdgeSqXValue")), 9));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECellularReturnType_MAX")), 10));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ECellularReturnType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_CashGen_ECellularReturnType_CRC() { return 4127554044U; }
	UEnum* Z_Construct_UEnum_CashGen_ECellularDistanceFunction()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UEnum_CashGen_ECellularDistanceFunction_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECellularDistanceFunction"), 0, Get_Z_Construct_UEnum_CashGen_ECellularDistanceFunction_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECellularDistanceFunction"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Euclidean")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Manhattan")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Natural")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECellularDistanceFunction_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ECellularDistanceFunction");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_CashGen_ECellularDistanceFunction_CRC() { return 647076163U; }
	UEnum* Z_Construct_UEnum_CashGen_EFractalType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UEnum_CashGen_EFractalType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EFractalType"), 0, Get_Z_Construct_UEnum_CashGen_EFractalType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EFractalType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBM")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Billow")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("RigidMulti")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFractalType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EFractalType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_CashGen_EFractalType_CRC() { return 2643042024U; }
	UEnum* Z_Construct_UEnum_CashGen_EInterp()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UEnum_CashGen_EInterp_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EInterp"), 0, Get_Z_Construct_UEnum_CashGen_EInterp_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EInterp"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("InterpLinear")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("InterpHermite")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("InterpQuintic")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EInterp_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EInterp");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_CashGen_EInterp_CRC() { return 3983694781U; }
	UEnum* Z_Construct_UEnum_CashGen_ENoiseType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UEnum_CashGen_ENoiseType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ENoiseType"), 0, Get_Z_Construct_UEnum_CashGen_ENoiseType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ENoiseType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Value")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ValueFractal")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Gradient")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("GradientFractal")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Simplex")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SimplexFractal")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Cellular")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("CellularHQ")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WhiteNoise")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ENoiseType_MAX")), 9));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ENoiseType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_CashGen_ENoiseType_CRC() { return 230150189U; }
	UClass* Z_Construct_UClass_UFastNoise_NoRegister()
	{
		return UFastNoise::StaticClass();
	}
	UClass* Z_Construct_UClass_UFastNoise()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_CashGen();
			OuterClass = UFastNoise::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("FastNoise/FastNoise.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFastNoise(Z_Construct_UClass_UFastNoise, &UFastNoise::StaticClass, TEXT("UFastNoise"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFastNoise);
	UScriptStruct* Z_Construct_UScriptStruct_FMeshData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UScriptStruct_FMeshData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MeshData"), sizeof(FMeshData), Get_Z_Construct_UScriptStruct_FMeshData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MeshData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMeshData>, EStructFlags(0x00000001));
			UProperty* NewProp_MyHeightMap = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MyHeightMap"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MyHeightMap, FMeshData), 0x0010000000000015);
			UProperty* NewProp_MyHeightMap_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MyHeightMap, TEXT("MyHeightMap"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_MyTangents = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MyTangents"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MyTangents, FMeshData), 0x0010000000000015);
			UProperty* NewProp_MyTangents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MyTangents, TEXT("MyTangents"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FRuntimeMeshTangent());
			UProperty* NewProp_MyVertexColors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MyVertexColors"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MyVertexColors, FMeshData), 0x0010000000000015);
			UProperty* NewProp_MyVertexColors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MyVertexColors, TEXT("MyVertexColors"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FColor());
			UProperty* NewProp_MyUV0 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MyUV0"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MyUV0, FMeshData), 0x0010000000000015);
			UProperty* NewProp_MyUV0_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MyUV0, TEXT("MyUV0"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_MyNormals = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MyNormals"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MyNormals, FMeshData), 0x0010000000000015);
			UProperty* NewProp_MyNormals_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MyNormals, TEXT("MyNormals"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_MyTriangles = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MyTriangles"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MyTriangles, FMeshData), 0x0010000000000015);
			UProperty* NewProp_MyTriangles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MyTriangles, TEXT("MyTriangles"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_MyVertices = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MyVertices"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MyVertices, FMeshData), 0x0010000000000015);
			UProperty* NewProp_MyVertices_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MyVertices, TEXT("MyVertices"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshData.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Defines the data required for a single procedural mesh section"));
			MetaData->SetValue(NewProp_MyHeightMap, TEXT("Category"), TEXT("Mesh Data Struct"));
			MetaData->SetValue(NewProp_MyHeightMap, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshData.h"));
			MetaData->SetValue(NewProp_MyTangents, TEXT("Category"), TEXT("Mesh Data Struct"));
			MetaData->SetValue(NewProp_MyTangents, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshData.h"));
			MetaData->SetValue(NewProp_MyVertexColors, TEXT("Category"), TEXT("Mesh Data Struct"));
			MetaData->SetValue(NewProp_MyVertexColors, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshData.h"));
			MetaData->SetValue(NewProp_MyUV0, TEXT("Category"), TEXT("Mesh Data Struct"));
			MetaData->SetValue(NewProp_MyUV0, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshData.h"));
			MetaData->SetValue(NewProp_MyNormals, TEXT("Category"), TEXT("Mesh Data Struct"));
			MetaData->SetValue(NewProp_MyNormals, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshData.h"));
			MetaData->SetValue(NewProp_MyTriangles, TEXT("Category"), TEXT("Mesh Data Struct"));
			MetaData->SetValue(NewProp_MyTriangles, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshData.h"));
			MetaData->SetValue(NewProp_MyVertices, TEXT("Category"), TEXT("Mesh Data Struct"));
			MetaData->SetValue(NewProp_MyVertices, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshData.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMeshData_CRC() { return 4141701280U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMeshConfig()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UScriptStruct_FMeshConfig_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MeshConfig"), sizeof(FMeshConfig), Get_Z_Construct_UScriptStruct_FMeshConfig_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MeshConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMeshConfig>, EStructFlags(0x00000001));
			UProperty* NewProp_ScaleMax = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScaleMax"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ScaleMax, FMeshConfig), 0x0010000000000005);
			UProperty* NewProp_ScaleMin = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScaleMin"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ScaleMin, FMeshConfig), 0x0010000000000005);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(AlignWithPlane, FMeshConfig, bool);
			UProperty* NewProp_AlignWithPlane = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AlignWithPlane"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AlignWithPlane, FMeshConfig), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(AlignWithPlane, FMeshConfig), sizeof(bool), true);
			UProperty* NewProp_PawnCollisionResponse = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PawnCollisionResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(PawnCollisionResponse, FMeshConfig), 0x0010000000000005, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_DensityMultiplier = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DensityMultiplier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DensityMultiplier, FMeshConfig), 0x0010000000000005);
			UProperty* NewProp_Mesh = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Mesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Mesh, FMeshConfig), 0x0010000000000005, Z_Construct_UClass_UStaticMesh_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshConfig.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Defines the spawning parameters for a single instanced static mesh"));
			MetaData->SetValue(NewProp_ScaleMax, TEXT("Category"), TEXT("Mesh Config Struct"));
			MetaData->SetValue(NewProp_ScaleMax, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshConfig.h"));
			MetaData->SetValue(NewProp_ScaleMax, TEXT("ToolTip"), TEXT("Maximum value of randome size"));
			MetaData->SetValue(NewProp_ScaleMin, TEXT("Category"), TEXT("Mesh Config Struct"));
			MetaData->SetValue(NewProp_ScaleMin, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshConfig.h"));
			MetaData->SetValue(NewProp_ScaleMin, TEXT("ToolTip"), TEXT("Mininum value of random size"));
			MetaData->SetValue(NewProp_AlignWithPlane, TEXT("Category"), TEXT("Mesh Config Struct"));
			MetaData->SetValue(NewProp_AlignWithPlane, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshConfig.h"));
			MetaData->SetValue(NewProp_AlignWithPlane, TEXT("ToolTip"), TEXT("Will the mesh be aligned to the floor, or remain vertical in world space"));
			MetaData->SetValue(NewProp_PawnCollisionResponse, TEXT("Category"), TEXT("Mesh Config Struct"));
			MetaData->SetValue(NewProp_PawnCollisionResponse, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshConfig.h"));
			MetaData->SetValue(NewProp_PawnCollisionResponse, TEXT("ToolTip"), TEXT("How the instances will react to Pawn collisions"));
			MetaData->SetValue(NewProp_DensityMultiplier, TEXT("Category"), TEXT("Mesh Config Struct"));
			MetaData->SetValue(NewProp_DensityMultiplier, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshConfig.h"));
			MetaData->SetValue(NewProp_DensityMultiplier, TEXT("ToolTip"), TEXT("The number of instances that will be spawned per block"));
			MetaData->SetValue(NewProp_Mesh, TEXT("Category"), TEXT("Mesh Config Struct"));
			MetaData->SetValue(NewProp_Mesh, TEXT("ModuleRelativePath"), TEXT("Public/Struct/MeshConfig.h"));
			MetaData->SetValue(NewProp_Mesh, TEXT("ToolTip"), TEXT("The static mesh that will be spawned"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMeshConfig_CRC() { return 1588046013U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBiomeConfig()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UScriptStruct_FBiomeConfig_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("BiomeConfig"), sizeof(FBiomeConfig), Get_Z_Construct_UScriptStruct_FBiomeConfig_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BiomeConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBiomeConfig>, EStructFlags(0x00000001));
			UProperty* NewProp_MeshConfigs = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MeshConfigs"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MeshConfigs, FBiomeConfig), 0x0010000000000005);
			UProperty* NewProp_MeshConfigs_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MeshConfigs, TEXT("MeshConfigs"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMeshConfig());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Struct/BiomeConfig.h"));
			MetaData->SetValue(NewProp_MeshConfigs, TEXT("Category"), TEXT("Biome Config Struct"));
			MetaData->SetValue(NewProp_MeshConfigs, TEXT("ModuleRelativePath"), TEXT("Public/Struct/BiomeConfig.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBiomeConfig_CRC() { return 2404693489U; }
	UScriptStruct* Z_Construct_UScriptStruct_FNoiseConfig()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UScriptStruct_FNoiseConfig_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("NoiseConfig"), sizeof(FNoiseConfig), Get_Z_Construct_UScriptStruct_FNoiseConfig_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("NoiseConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FNoiseConfig>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Invert, FNoiseConfig, bool);
			UProperty* NewProp_Invert = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Invert"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Invert, FNoiseConfig), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(Invert, FNoiseConfig), sizeof(bool), true);
			UProperty* NewProp_SampleFactor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SampleFactor"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SampleFactor, FNoiseConfig), 0x0010000000000005);
			UProperty* NewProp_Gain = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Gain"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Gain, FNoiseConfig), 0x0010000000000005);
			UProperty* NewProp_Lacunarity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Lacunarity"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Lacunarity, FNoiseConfig), 0x0010000000000005);
			UProperty* NewProp_Seed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Seed"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Seed, FNoiseConfig), 0x0010000000000005);
			UProperty* NewProp_Frequency = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Frequency"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Frequency, FNoiseConfig), 0x0010000000000005);
			UProperty* NewProp_Octaves = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Octaves"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Octaves, FNoiseConfig), 0x0010000000000005);
			UProperty* NewProp_Fractal_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Fractal_Type"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Fractal_Type, FNoiseConfig), 0x0010000000000005, Z_Construct_UEnum_CashGen_EFractalType());
			UProperty* NewProp_Noise_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Noise_Type"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Noise_Type, FNoiseConfig), 0x0010000000000005, Z_Construct_UEnum_CashGen_ENoiseType());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Struct/NoiseConfig.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Defines the noise generator parameters"));
			MetaData->SetValue(NewProp_Invert, TEXT("Category"), TEXT("Noise Config Struct"));
			MetaData->SetValue(NewProp_Invert, TEXT("ModuleRelativePath"), TEXT("Public/Struct/NoiseConfig.h"));
			MetaData->SetValue(NewProp_SampleFactor, TEXT("Category"), TEXT("Noise Config Struct"));
			MetaData->SetValue(NewProp_SampleFactor, TEXT("ModuleRelativePath"), TEXT("Public/Struct/NoiseConfig.h"));
			MetaData->SetValue(NewProp_Gain, TEXT("Category"), TEXT("Noise Config Struct"));
			MetaData->SetValue(NewProp_Gain, TEXT("ModuleRelativePath"), TEXT("Public/Struct/NoiseConfig.h"));
			MetaData->SetValue(NewProp_Lacunarity, TEXT("Category"), TEXT("Noise Config Struct"));
			MetaData->SetValue(NewProp_Lacunarity, TEXT("ModuleRelativePath"), TEXT("Public/Struct/NoiseConfig.h"));
			MetaData->SetValue(NewProp_Seed, TEXT("Category"), TEXT("Noise Config Struct"));
			MetaData->SetValue(NewProp_Seed, TEXT("ModuleRelativePath"), TEXT("Public/Struct/NoiseConfig.h"));
			MetaData->SetValue(NewProp_Frequency, TEXT("Category"), TEXT("Noise Config Struct"));
			MetaData->SetValue(NewProp_Frequency, TEXT("ModuleRelativePath"), TEXT("Public/Struct/NoiseConfig.h"));
			MetaData->SetValue(NewProp_Octaves, TEXT("Category"), TEXT("Noise Config Struct"));
			MetaData->SetValue(NewProp_Octaves, TEXT("ModuleRelativePath"), TEXT("Public/Struct/NoiseConfig.h"));
			MetaData->SetValue(NewProp_Fractal_Type, TEXT("Category"), TEXT("Noise Config Struct"));
			MetaData->SetValue(NewProp_Fractal_Type, TEXT("ModuleRelativePath"), TEXT("Public/Struct/NoiseConfig.h"));
			MetaData->SetValue(NewProp_Noise_Type, TEXT("Category"), TEXT("Noise Config Struct"));
			MetaData->SetValue(NewProp_Noise_Type, TEXT("ModuleRelativePath"), TEXT("Public/Struct/NoiseConfig.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FNoiseConfig_CRC() { return 1256880311U; }
	UScriptStruct* Z_Construct_UScriptStruct_FZoneConfig()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UScriptStruct_FZoneConfig_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("ZoneConfig"), sizeof(FZoneConfig), Get_Z_Construct_UScriptStruct_FZoneConfig_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ZoneConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FZoneConfig>, EStructFlags(0x00000001));
			UProperty* NewProp_LOD3Range = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LOD3Range"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LOD3Range, FZoneConfig), 0x0010000000000005);
			UProperty* NewProp_LOD2Range = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LOD2Range"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LOD2Range, FZoneConfig), 0x0010000000000005);
			UProperty* NewProp_LOD1Range = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LOD1Range"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LOD1Range, FZoneConfig), 0x0010000000000005);
			UProperty* NewProp_LOD0Range = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LOD0Range"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LOD0Range, FZoneConfig), 0x0010000000000005);
			UProperty* NewProp_TerrainMaterial = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TerrainMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TerrainMaterial, FZoneConfig), 0x0010000000000005, Z_Construct_UClass_UMaterial_NoRegister());
			UProperty* NewProp_Amplitude = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Amplitude"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Amplitude, FZoneConfig), 0x0010000000000005);
			UProperty* NewProp_UnitSize = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UnitSize"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(UnitSize, FZoneConfig), 0x0010000000000005);
			UProperty* NewProp_YUnits = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("YUnits"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(YUnits, FZoneConfig), 0x0010000000000005);
			UProperty* NewProp_XUnits = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("XUnits"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(XUnits, FZoneConfig), 0x0010000000000005);
			UProperty* NewProp_noiseConfig = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("noiseConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(noiseConfig, FZoneConfig), 0x0010000000000005, Z_Construct_UScriptStruct_FNoiseConfig());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct defines all applicable attributes for managing generation of a single zone"));
			MetaData->SetValue(NewProp_LOD3Range, TEXT("Category"), TEXT("Zone Config Struct"));
			MetaData->SetValue(NewProp_LOD3Range, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(NewProp_LOD3Range, TEXT("ToolTip"), TEXT("Do no render range *"));
			MetaData->SetValue(NewProp_LOD2Range, TEXT("Category"), TEXT("Zone Config Struct"));
			MetaData->SetValue(NewProp_LOD2Range, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(NewProp_LOD2Range, TEXT("ToolTip"), TEXT("LOD 2->3 transition range *"));
			MetaData->SetValue(NewProp_LOD1Range, TEXT("Category"), TEXT("Zone Config Struct"));
			MetaData->SetValue(NewProp_LOD1Range, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(NewProp_LOD1Range, TEXT("ToolTip"), TEXT("LOD 1->2 transition range *"));
			MetaData->SetValue(NewProp_LOD0Range, TEXT("Category"), TEXT("Zone Config Struct"));
			MetaData->SetValue(NewProp_LOD0Range, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(NewProp_LOD0Range, TEXT("ToolTip"), TEXT("LOD 0->1 transition range *"));
			MetaData->SetValue(NewProp_TerrainMaterial, TEXT("Category"), TEXT("Zone Config Struct"));
			MetaData->SetValue(NewProp_TerrainMaterial, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(NewProp_TerrainMaterial, TEXT("ToolTip"), TEXT("Material for the terrain mesh"));
			MetaData->SetValue(NewProp_Amplitude, TEXT("Category"), TEXT("Zone Config Struct"));
			MetaData->SetValue(NewProp_Amplitude, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(NewProp_Amplitude, TEXT("ToolTip"), TEXT("Multiplier for heightmap"));
			MetaData->SetValue(NewProp_UnitSize, TEXT("Category"), TEXT("Zone Config Struct"));
			MetaData->SetValue(NewProp_UnitSize, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(NewProp_UnitSize, TEXT("ToolTip"), TEXT("Size of a single block in world units"));
			MetaData->SetValue(NewProp_YUnits, TEXT("Category"), TEXT("Zone Config Struct"));
			MetaData->SetValue(NewProp_YUnits, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(NewProp_YUnits, TEXT("ToolTip"), TEXT("Number of blocks along a zone's Y axis"));
			MetaData->SetValue(NewProp_XUnits, TEXT("Category"), TEXT("Zone Config Struct"));
			MetaData->SetValue(NewProp_XUnits, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(NewProp_XUnits, TEXT("ToolTip"), TEXT("Number of blocks along a zone's X axis"));
			MetaData->SetValue(NewProp_noiseConfig, TEXT("Category"), TEXT("Zone Config Struct"));
			MetaData->SetValue(NewProp_noiseConfig, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneConfig.h"));
			MetaData->SetValue(NewProp_noiseConfig, TEXT("ToolTip"), TEXT("Noise Generator configuration struct"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FZoneConfig_CRC() { return 942790532U; }
	UClass* Z_Construct_UClass_AZoneManager_NoRegister()
	{
		return AZoneManager::StaticClass();
	}
	UClass* Z_Construct_UClass_AZoneManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_CashGen();
			OuterClass = AZoneManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ZoneManager.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/ZoneManager.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AZoneManager(Z_Construct_UClass_AZoneManager, &AZoneManager::StaticClass, TEXT("AZoneManager"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AZoneManager);
	UScriptStruct* Z_Construct_UScriptStruct_FZoneJob()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UScriptStruct_FZoneJob_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("ZoneJob"), sizeof(FZoneJob), Get_Z_Construct_UScriptStruct_FZoneJob_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ZoneJob"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FZoneJob>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(isInPlaceLODUpdate, FZoneJob, bool);
			UProperty* NewProp_isInPlaceLODUpdate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("isInPlaceLODUpdate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(isInPlaceLODUpdate, FZoneJob), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(isInPlaceLODUpdate, FZoneJob), sizeof(bool), true);
			UProperty* NewProp_LOD = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LOD"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(LOD, FZoneJob), 0x0010000000000005);
			UProperty* NewProp_zoneID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("zoneID"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(zoneID, FZoneJob), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneJob.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Defines a single mesh generation job"));
			MetaData->SetValue(NewProp_isInPlaceLODUpdate, TEXT("Category"), TEXT("Zone Job Config"));
			MetaData->SetValue(NewProp_isInPlaceLODUpdate, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneJob.h"));
			MetaData->SetValue(NewProp_LOD, TEXT("Category"), TEXT("Zone Job Config"));
			MetaData->SetValue(NewProp_LOD, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneJob.h"));
			MetaData->SetValue(NewProp_zoneID, TEXT("Category"), TEXT("Zone Job Config"));
			MetaData->SetValue(NewProp_zoneID, TEXT("ModuleRelativePath"), TEXT("Public/Struct/ZoneJob.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FZoneJob_CRC() { return 3578303964U; }
	UFunction* Z_Construct_UFunction_AWorldManager_SpawnZones()
	{
		struct WorldManager_eventSpawnZones_Parms
		{
			APawn* aPlayerPawn;
			FZoneConfig aZoneConfig;
			int32 aNumXZones;
			int32 aNumYZones;
			int32 aMaxThreads;
			uint8 aRenderTokens;
		};
		UObject* Outer=Z_Construct_UClass_AWorldManager();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SpawnZones"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(WorldManager_eventSpawnZones_Parms));
			UProperty* NewProp_aRenderTokens = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aRenderTokens"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(aRenderTokens, WorldManager_eventSpawnZones_Parms), 0x0010000000000082);
			UProperty* NewProp_aMaxThreads = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aMaxThreads"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(aMaxThreads, WorldManager_eventSpawnZones_Parms), 0x0010000000000082);
			UProperty* NewProp_aNumYZones = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aNumYZones"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(aNumYZones, WorldManager_eventSpawnZones_Parms), 0x0010000000000082);
			UProperty* NewProp_aNumXZones = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aNumXZones"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(aNumXZones, WorldManager_eventSpawnZones_Parms), 0x0010000000000082);
			UProperty* NewProp_aZoneConfig = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aZoneConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(aZoneConfig, WorldManager_eventSpawnZones_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FZoneConfig());
			UProperty* NewProp_aPlayerPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aPlayerPawn"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(aPlayerPawn, WorldManager_eventSpawnZones_Parms), 0x0010000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("World Manager"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/WorldManager.h"));
			MetaData->SetValue(NewProp_aRenderTokens, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_aMaxThreads, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_aNumYZones, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_aNumXZones, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_aZoneConfig, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AWorldManager_NoRegister()
	{
		return AWorldManager::StaticClass();
	}
	UClass* Z_Construct_UClass_AWorldManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_CashGen();
			OuterClass = AWorldManager::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_AWorldManager_SpawnZones());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_currentPlayerZone = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currentPlayerZone"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(currentPlayerZone, AWorldManager), 0x0010000000000005, Z_Construct_UScriptStruct_FVector2D());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AWorldManager_SpawnZones(), "SpawnZones"); // 1287004869
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WorldManager.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/WorldManager.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_currentPlayerZone, TEXT("Category"), TEXT("CashGen Manager"));
				MetaData->SetValue(NewProp_currentPlayerZone, TEXT("ModuleRelativePath"), TEXT("Public/WorldManager.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AWorldManager(Z_Construct_UClass_AWorldManager, &AWorldManager::StaticClass, TEXT("AWorldManager"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AWorldManager);
	UScriptStruct* Z_Construct_UScriptStruct_FFoliageConfig()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_CashGen();
		extern uint32 Get_Z_Construct_UScriptStruct_FFoliageConfig_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("FoliageConfig"), sizeof(FFoliageConfig), Get_Z_Construct_UScriptStruct_FFoliageConfig_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FoliageConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FFoliageConfig>, EStructFlags(0x00000001));
			UProperty* NewProp_PawnCollisionResponse = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PawnCollisionResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(PawnCollisionResponse, FFoliageConfig), 0x0010000000000005, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_NumInstancesPerBlock = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NumInstancesPerBlock"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumInstancesPerBlock, FFoliageConfig), 0x0010000000000005);
			UProperty* NewProp_TreeMesh = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TreeMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TreeMesh, FFoliageConfig), 0x0010000000000005, Z_Construct_UClass_UStaticMesh_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Struct/FoliageConfig.h"));
			MetaData->SetValue(NewProp_PawnCollisionResponse, TEXT("Category"), TEXT("Foliage Config Struct"));
			MetaData->SetValue(NewProp_PawnCollisionResponse, TEXT("ModuleRelativePath"), TEXT("Public/Struct/FoliageConfig.h"));
			MetaData->SetValue(NewProp_NumInstancesPerBlock, TEXT("Category"), TEXT("Foliage Config Struct"));
			MetaData->SetValue(NewProp_NumInstancesPerBlock, TEXT("ModuleRelativePath"), TEXT("Public/Struct/FoliageConfig.h"));
			MetaData->SetValue(NewProp_TreeMesh, TEXT("Category"), TEXT("Foliage Config Struct"));
			MetaData->SetValue(NewProp_TreeMesh, TEXT("ModuleRelativePath"), TEXT("Public/Struct/FoliageConfig.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FFoliageConfig_CRC() { return 2412381700U; }
	UPackage* Z_Construct_UPackage__Script_CashGen()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/CashGen")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000080);
			FGuid Guid;
			Guid.A = 0xDC9CF5C7;
			Guid.B = 0x1C8FE0A2;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
